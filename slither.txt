ColaMachine.withdrawETH() (contracts/Cola Machine.sol#320-326) sends eth to arbitrary user
        Dangerous calls:
        - (success) = address(msg.sender).call{value: _balance}() (contracts/Cola Machine.sol#322)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in ColaMachine.withdrawDAI() (contracts/Cola Machine.sol#332-340):
        External calls:
        - success = daitoken.transfer(msg.sender,_balance) (contracts/Cola Machine.sol#336)
        Event emitted after the call(s):
        - Withdraw(msg.sender,_balance) (contracts/Cola Machine.sol#338)
Reentrancy in ColaMachine.withdrawETH() (contracts/Cola Machine.sol#320-326):
        External calls:
        - (success) = address(msg.sender).call{value: _balance}() (contracts/Cola Machine.sol#322)
        Event emitted after the call(s):
        - Withdraw(msg.sender,_balance) (contracts/Cola Machine.sol#324)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Address.verifyCallResult(bool,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#201-221) uses assembly
        - INLINE ASM (node_modules/@openzeppelin/contracts/utils/Address.sol#213-216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Different versions of Solidity are used:
        - Version used: ['0.8.7', '^0.8.0', '^0.8.1']
        - ^0.8.0 (node_modules/@openzeppelin/contracts/access/AccessControl.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/access/IAccessControl.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#4)
        - ^0.8.1 (node_modules/@openzeppelin/contracts/utils/Address.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Context.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/utils/Strings.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#4)
        - ^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#4)
        - 0.8.7 (contracts/Cola Machine.sol#2)
        - 0.8.7 (contracts/ColaERC20.sol#2)
        - 0.8.7 (contracts/test/DaiTokenMock.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/access/AccessControl.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/access/IAccessControl.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#4) allows old versions
Pragma version^0.8.1 (node_modules/@openzeppelin/contracts/utils/Address.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/utils/Context.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/utils/Strings.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol#4) allows old versions
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (node_modules/@openzeppelin/contracts/utils/Address.sol#60-65):
        - (success) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts/utils/Address.sol#63)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#128-139):
        - (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)
Low level call in Address.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#157-166):
        - (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#164)
Low level call in Address.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts/utils/Address.sol#184-193):
        - (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#191)
Low level call in ColaMachine.withdrawETH() (contracts/Cola Machine.sol#320-326):
        - (success) = address(msg.sender).call{value: _balance}() (contracts/Cola Machine.sol#322)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IERC20Permit.DOMAIN_SEPARATOR() (node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol#59) is not in mixedCase
Parameter ColaMachine.buyColaETH(uint32)._amount (contracts/Cola Machine.sol#108) is not in mixedCase
Parameter ColaMachine.buyColaDAI(uint32)._amount (contracts/Cola Machine.sol#200) is not in mixedCase
Parameter ColaMachine.returnBottle(uint256)._amount (contracts/Cola Machine.sol#238) is not in mixedCase
Parameter ColaMachine.addStock(uint32)._amount (contracts/Cola Machine.sol#252) is not in mixedCase
Parameter ColaMachine.setPrice(uint256,uint256)._newPriceInETH (contracts/Cola Machine.sol#264) is not in mixedCase
Parameter ColaMachine.setPrice(uint256,uint256)._newPriceInDAI (contracts/Cola Machine.sol#264) is not in mixedCase
Parameter ColaMachine.addOperator(address)._operatorAddress (contracts/Cola Machine.sol#286) is not in mixedCase
Variable ColaMachine.PRICE (contracts/Cola Machine.sol#64) is not in mixedCase
Variable ColaMachine.PRICE_DAI (contracts/Cola Machine.sol#65) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
. analyzed (16 contracts with 80 detectors), 32 result(s) found